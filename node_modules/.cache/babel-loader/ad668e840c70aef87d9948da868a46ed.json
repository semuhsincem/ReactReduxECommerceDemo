{"ast":null,"code":"var _jsxFileName = \"/Users/muhsincem/Desktop/React/northwind-redux/src/components/categories/CategoryList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport { changeCategory, getCategories } from \"../../redux/actions/categoryActions\";\nimport { getProducts } from \"../../redux/actions/productList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CategoryList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      this.props.actions.getCategories();\n      console.log(this.props.categories.length);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" CategoryList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: this.props.categories.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          active: this.props.currentCategory.categoryName === item.categoryName,\n          onClick: () => {\n            this.props.actions.changeCategory(item);\n            this.props.actions.getProducts(item.id);\n          },\n          children: item.categoryName\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentCategory: state.changeCategoryReducer,\n    categories: state.categoryListReducer,\n    products: state.productListReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      getCategories: bindActionCreators(getCategories, dispatch),\n      changeCategory: bindActionCreators(changeCategory, dispatch),\n      getProducts: bindActionCreators(getProducts, dispatch)\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList);","map":{"version":3,"sources":["/Users/muhsincem/Desktop/React/northwind-redux/src/components/categories/CategoryList.js"],"names":["React","Component","connect","ListGroup","ListGroupItem","bindActionCreators","changeCategory","getCategories","getProducts","CategoryList","componentDidMount","props","actions","console","log","categories","length","render","map","item","index","currentCategory","categoryName","id","mapStateToProps","state","changeCategoryReducer","categoryListReducer","products","productListReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,YAAzC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SACEC,cADF,EAEEC,aAFF,QAGO,qCAHP;AAIA,SAASC,WAAT,QAA4B,iCAA5B;;;;AAEA,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SACnCS,iBADmC,GACf,MAAM;AACxB,WAAKC,KAAL,CAAWC,OAAX,CAAmBL,aAAnB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,UAAX,CAAsBC,MAAlC;AACD,KAJkC;AAAA;;AAMnCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA,kBACG,KAAKN,KAAL,CAAWI,UAAX,CAAsBG,GAAtB,CAA0B,CAACC,IAAD,EAAOC,KAAP,kBACzB,QAAC,aAAD;AACE,UAAA,MAAM,EACJ,KAAKT,KAAL,CAAWU,eAAX,CAA2BC,YAA3B,KAA4CH,IAAI,CAACG,YAFrD;AAIE,UAAA,OAAO,EAAE,MAAM;AACb,iBAAKX,KAAL,CAAWC,OAAX,CAAmBN,cAAnB,CAAkCa,IAAlC;AACA,iBAAKR,KAAL,CAAWC,OAAX,CAAmBJ,WAAnB,CAA+BW,IAAI,CAACI,EAApC;AACD,WAPH;AAAA,oBAUGJ,IAAI,CAACG;AAVR,WAQOF,KARP;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAqBD;;AA5BkC;;AA+BrC,SAASI,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLJ,IAAAA,eAAe,EAAEI,KAAK,CAACC,qBADlB;AAELX,IAAAA,UAAU,EAAEU,KAAK,CAACE,mBAFb;AAGLC,IAAAA,QAAQ,EAAEH,KAAK,CAACI;AAHX,GAAP;AAKD;;AACD,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLnB,IAAAA,OAAO,EAAE;AACPL,MAAAA,aAAa,EAAEF,kBAAkB,CAACE,aAAD,EAAgBwB,QAAhB,CAD1B;AAEPzB,MAAAA,cAAc,EAAED,kBAAkB,CAACC,cAAD,EAAiByB,QAAjB,CAF3B;AAGPvB,MAAAA,WAAW,EAAEH,kBAAkB,CAACG,WAAD,EAAcuB,QAAd;AAHxB;AADJ,GAAP;AAOD;;AAED,eAAe7B,OAAO,CAACsB,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CrB,YAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport {\n  changeCategory,\n  getCategories,\n} from \"../../redux/actions/categoryActions\";\nimport { getProducts } from \"../../redux/actions/productList\";\n\nclass CategoryList extends Component {\n  componentDidMount = () => {\n    this.props.actions.getCategories();\n    console.log(this.props.categories.length);\n  };\n\n  render() {\n    return (\n      <>\n        <div> CategoryList</div>\n        <ListGroup>\n          {this.props.categories.map((item, index) => (\n            <ListGroupItem\n              active={\n                this.props.currentCategory.categoryName === item.categoryName\n              }\n              onClick={() => {\n                this.props.actions.changeCategory(item);\n                this.props.actions.getProducts(item.id);\n              }}\n              key={index}\n            >\n              {item.categoryName}\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentCategory: state.changeCategoryReducer,\n    categories: state.categoryListReducer,\n    products: state.productListReducer,\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      getCategories: bindActionCreators(getCategories, dispatch),\n      changeCategory: bindActionCreators(changeCategory, dispatch),\n      getProducts: bindActionCreators(getProducts, dispatch),\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList);\n"]},"metadata":{},"sourceType":"module"}