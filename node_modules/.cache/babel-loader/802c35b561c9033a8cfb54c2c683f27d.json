{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport initialState from \"./initialState\";\nexport default function cartReducer(state = initialState.cart, action) {\n  switch (action.type) {\n    case actionTypes.ADD_PRODUCT_INTO_CART:\n      var addedItem = state.find(x => x.product.id === action.payload.id);\n\n      if (addedItem) {\n        let newState = state.map(cartItem => {\n          if (cartItem.product.id === action.payload.product.id) {\n            return Object.assign({}, addedItem, {\n              quantity: addedItem.quantity + 1\n            });\n          }\n\n          return cartItem;\n        });\n        return newState;\n      } else {\n        return [...state, { ...action.payload\n        }];\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/muhsincem/Desktop/React/northwind-redux/src/redux/reducers/cartReducer.js"],"names":["actionTypes","initialState","cartReducer","state","cart","action","type","ADD_PRODUCT_INTO_CART","addedItem","find","x","product","id","payload","newState","map","cartItem","Object","assign","quantity"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGF,YAAY,CAACG,IAA1C,EAAgDC,MAAhD,EAAwD;AACrE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAW,CAACO,qBAAjB;AACE,UAAIC,SAAS,GAAGL,KAAK,CAACM,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACC,OAAF,CAAUC,EAAV,KAAiBP,MAAM,CAACQ,OAAP,CAAeD,EAAlD,CAAhB;;AACA,UAAIJ,SAAJ,EAAe;AACb,YAAIM,QAAQ,GAAGX,KAAK,CAACY,GAAN,CAAWC,QAAD,IAAc;AACrC,cAAIA,QAAQ,CAACL,OAAT,CAAiBC,EAAjB,KAAwBP,MAAM,CAACQ,OAAP,CAAeF,OAAf,CAAuBC,EAAnD,EAAuD;AACrD,mBAAOK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,SAAlB,EAA6B;AAACW,cAAAA,QAAQ,EAAEX,SAAS,CAACW,QAAV,GAAqB;AAAhC,aAA7B,CAAP;AACD;;AACD,iBAAOH,QAAP;AACD,SALc,CAAf;AAMA,eAAOF,QAAP;AACD,OARD,MAQK;AACH,eAAO,CAAC,GAAGX,KAAJ,EAAW,EAAE,GAAGE,MAAM,CAACQ;AAAZ,SAAX,CAAP;AACD;;AACH;AACE,aAAOV,KAAP;AAfJ;AAiBD","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport initialState from \"./initialState\";\n\nexport default function cartReducer(state = initialState.cart, action) {\n  switch (action.type) {\n    case actionTypes.ADD_PRODUCT_INTO_CART:\n      var addedItem = state.find((x) => x.product.id === action.payload.id);\n      if (addedItem) {\n        let newState = state.map((cartItem) => {\n          if (cartItem.product.id === action.payload.product.id) {\n            return Object.assign({}, addedItem, {quantity: addedItem.quantity + 1});\n          }\n          return cartItem;\n        });\n        return newState;\n      }else{\n        return [...state, { ...action.payload }]\n      }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}